{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Documents\\\\My_projects\\\\UDEMY_REACT_ZERO_TO_MASTERY_2020\\\\crown-clothing\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React from 'react';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport './cart-icon.styles.scss';\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => {\n  return React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, itemCount));\n}; // This is a selector which re-render even if the component state value does not change. It is not good in term of memory\n\n\nconst mapStateToProps = state => ({\n  itemCount: selectCartItemsCount\n}); // The use of reselect library allows to memoize (cache the state value) and not re-render a component if the state value does not change\n\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["C:/Users/domin/Documents/My_projects/UDEMY_REACT_ZERO_TO_MASTERY_2020/crown-clothing/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","CartIcon","itemCount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SAASC,oBAAT,QAAqC,iCAArC;AAEA,OAAO,yBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,gBAAF;AAAoBG,EAAAA;AAApB,CAAD,KAAqC;AACrD,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,SAA9B,CAFD,CADD;AAMA,CAPD,C,CASA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCF,EAAAA,SAAS,EAAEF;AADsB,CAAL,CAA7B,C,CAIA;;;AAEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACvCP,EAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACP,gBAAgB,EAAjB;AADO,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACK,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CJ,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { ReactComponent as ShoppingIcon } from '../../assets/shopping-bag.svg';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\r\n\r\nimport './cart-icon.styles.scss';\r\n\r\nconst CartIcon = ({ toggleCartHidden, itemCount }) => {\r\n\treturn (\r\n\t\t<div className='cart-icon' onClick={toggleCartHidden}>\r\n\t\t\t<ShoppingIcon className='shopping-icon' />\r\n\t\t\t<span className='item-count'>{itemCount}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// This is a selector which re-render even if the component state value does not change. It is not good in term of memory\r\nconst mapStateToProps = state => ({\r\n\titemCount: selectCartItemsCount\r\n});\r\n\r\n// The use of reselect library allows to memoize (cache the state value) and not re-render a component if the state value does not change\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\ttoggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n"]},"metadata":{},"sourceType":"module"}