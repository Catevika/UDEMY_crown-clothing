{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\domin\\\\Documents\\\\My_projects\\\\UDEMY_REACT_ZERO_TO_MASTERY_2020\\\\crown-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser, createUserWithEmailAndPassword } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  user,\n  additionalData\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* inSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/domin/Documents/My_projects/UDEMY_REACT_ZERO_TO_MASTERY_2020/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","createUserWithEmailAndPassword","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","inSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n\tsignInSuccess,\r\n\tsignInFailure,\r\n\tsignOutSuccess,\r\n\tsignOutFailure,\r\n\tsignUpSuccess,\r\n\tsignUpFailure\r\n} from './user.actions';\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser,\r\n\tcreateUserWithEmailAndPassword\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n\ttry {\r\n\t\tconst userRef = yield call(\r\n\t\t\tcreateUserProfileDocument,\r\n\t\t\tuserAuth,\r\n\t\t\tadditionalData\r\n\t\t);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\ttry {\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t\tyield getSnapshotFromUserAuth(userAuth);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signOut() {\r\n\ttry {\r\n\t\tyield auth.signOut();\r\n\t\tyield put(signOutSuccess());\r\n\t} catch (error) {\r\n\t\tyield put(signOutFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\t\tyield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n\t} catch (error) {\r\n\t\tyield put(signUpFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInAfterSignUp({ user, additionalData }) {\r\n\tyield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* inSignUpSuccess() {\r\n\tyield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(onGoogleSignInStart),\r\n\t\tcall(onEmailSignInStart),\r\n\t\tcall(onCheckUserSession),\r\n\t\tcall(onSignOutStart)\r\n\t]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}