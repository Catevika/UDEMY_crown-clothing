{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\domin\\\\Documents\\\\My_projects\\\\UDEMY_REACT_ZERO_TO_MASTERY_2020\\\\crown-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCnmKjyHql177Tn1DaObaKHiEAflC52N4Q',\n  authDomain: 'crwn-db-c8901.firebaseapp.com',\n  databaseURL: 'https://crwn-db-c8901.firebaseio.com',\n  projectId: 'crwn-db-c8901',\n  storageBucket: 'crwn-db-c8901.appspot.com',\n  messagingSenderId: '393111349772',\n  appId: '1:393111349772:web:58bcd846ba6df221769c29'\n};\nexport const createUserProfileDocument = async ({\n  userAuth,\n  additionalData\n}) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (snapShot.exists === false) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/domin/Documents/My_projects/UDEMY_REACT_ZERO_TO_MASTERY_2020/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,+BAFE;AAGdC,EAAAA,WAAW,EAAE,sCAHC;AAIdC,EAAAA,SAAS,EAAE,eAJG;AAKdC,EAAAA,aAAa,EAAE,2BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE;AAPO,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAO;AAC/CC,EAAAA,QAD+C;AAE/CC,EAAAA;AAF+C,CAAP,KAGnC;AACL,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAID,QAAQ,CAACE,MAAT,KAAoB,KAAxB,EAA+B;AAAA,UACtBC,WADsB,GACCT,QADD,CACtBS,WADsB;AAAA,UACTC,KADS,GACCV,QADD,CACTU,KADS;AAE9B,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AACA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR;AAAcJ,QAAAA,WAAd;AAA2BC,QAAAA,KAA3B;AAAkCC,QAAAA;AAAlC,SAA+CV,cAA/C,EAAN;AACA,KAFD,CAEE,OAAOa,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD;;AACD,SAAOf,OAAP;AACA,CApBM;AAsBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyCnmKjyHql177Tn1DaObaKHiEAflC52N4Q',\r\n\tauthDomain: 'crwn-db-c8901.firebaseapp.com',\r\n\tdatabaseURL: 'https://crwn-db-c8901.firebaseio.com',\r\n\tprojectId: 'crwn-db-c8901',\r\n\tstorageBucket: 'crwn-db-c8901.appspot.com',\r\n\tmessagingSenderId: '393111349772',\r\n\tappId: '1:393111349772:web:58bcd846ba6df221769c29'\r\n};\r\n\r\nexport const createUserProfileDocument = async ({\r\n\tuserAuth,\r\n\tadditionalData\r\n}) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif (snapShot.exists === false) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createAt = new Date();\r\n\t\ttry {\r\n\t\t\tawait userRef.set({ displayName, email, createAt, ...additionalData });\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error creating user', error.message);\r\n\t\t}\r\n\t}\r\n\treturn userRef;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}