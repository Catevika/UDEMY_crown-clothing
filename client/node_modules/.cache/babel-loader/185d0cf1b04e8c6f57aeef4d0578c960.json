{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Documents\\\\My_projects\\\\UDEMY_REACT_ZERO_TO_MASTERY_2020\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      autoComplete: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      autoComplete: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/domin/Documents/My_projects/UDEMY_REACT_ZERO_TO_MASTERY_2020/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {\r\n\tgoogleSignInStart,\r\n\temailSignInStart\r\n} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n\tSignInContainer,\r\n\tSignInTitle,\r\n\tButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nclass SignIn extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t};\r\n\t}\r\n\r\n\thandleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { emailSignInStart } = this.props;\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\temailSignInStart(email, password);\r\n\t};\r\n\r\n\thandleChange = event => {\r\n\t\tconst { value, name } = event.target;\r\n\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { googleSignInStart } = this.props;\r\n\t\treturn (\r\n\t\t\t<SignInContainer>\r\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\r\n\t\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\tlabel='email'\r\n\t\t\t\t\t\tautoComplete='email'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel='password'\r\n\t\t\t\t\t\tautoComplete='password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ButtonsBarContainer>\r\n\t\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\r\n\t\t\t\t\t\t<CustomButton\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tonClick={googleSignInStart}\r\n\t\t\t\t\t\t\tisGoogleSignIn\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t\t</CustomButton>\r\n\t\t\t\t\t</ButtonsBarContainer>\r\n\t\t\t\t</form>\r\n\t\t\t</SignInContainer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: (email, password) =>\r\n\t\tdispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}