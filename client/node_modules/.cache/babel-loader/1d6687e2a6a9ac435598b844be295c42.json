{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Documents\\\\My_projects\\\\UDEMY_REACT_ZERO_TO_MASTERY_2020\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with_spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/domin/Documents/My_projects/UDEMY_REACT_ZERO_TO_MASTERY_2020/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChCY,KADgC,GACxB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADwB;AAAA,SAGhCC,uBAHgC,GAGN,IAHM;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAAA,UACXZ,iBADW,GACW,KAAKa,KADhB,CACXb,iBADW;AAEnB,UAAMc,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAlB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAKA;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKT,KADf,CACAS,KADA;AAAA,UAEAZ,OAFA,GAEY,KAAKD,KAFjB,CAEAC,OAFA;AAIR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAFrB;AAGC,MAAA,MAAM,EAAEV,KAAK,IACZ,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAQC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAEV,KAAK,IACZ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,CADD;AAiBA;;AArC+B;;AAwCjC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACvCzB,EAAAA,iBAAiB,EAAEmB,cAAc,IAChCM,QAAQ,CAACzB,iBAAiB,CAACmB,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport WithSpinner from '../../components/with_spinner/with-spinner.component';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n\tstate = { loading: true };\r\n\r\n\tunsubscribeFromSnapshot = null;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\r\n\t\tcollectionRef.get().then(snapshot => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tupdateCollections(collectionsMap);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\tconst { loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='shop-page'>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t<CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t<CollectionPageWithSpinner isLoading={loading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateCollections: collectionsMap =>\r\n\t\tdispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}